import{e as h,f as l}from"./Bkm6qw8b.js";const p=h("stock",{state:()=>({stockIns:[],stockOuts:[],stockInDetails:[],stockOutDetails:[],stockTransfers:[],selectedStockIn:null,totalRecords:0,stats:{total:void 0,draft:void 0,posted:void 0},loading:!1,error:null,params:{first:0,rows:10,sortField:null,sortOrder:null,draw:1,search:""},form:{},isEditMode:!1,showModal:!1,validationErrors:[]}),actions:{async fetchStockInsPaginated(){this.loading=!0;try{const{$api:t}=l(),s=localStorage.getItem("token"),o=new URLSearchParams({page:(this.params.first/this.params.rows+1).toString(),rows:this.params.rows.toString(),sortField:this.params.sortField||"",sortOrder:this.params.sortOrder?this.params.sortOrder.toString():"",draw:(this.params.draw||1).toString(),search:this.params.search||""}),a=await fetch(`${t.stockIn()}?${o.toString()}`,{headers:{Authorization:`Bearer ${s}`,"Content-Type":"application/json",Accept:"application/json"}});if(!a.ok){const r=await a.json().catch(()=>({message:"Gagal memuat data stock in dengan status: "+a.status}));throw new Error(r.message||"Gagal memuat data stock in")}const e=await a.json();return this.stockIns=e.data||[],this.totalRecords=parseInt(e.meta.total)||0,e}catch(t){throw this.stockIns=[],this.totalRecords=0,t}finally{this.loading=!1}},async saveStockIn(){var t;this.loading=!0;try{const{$api:s}=l(),e=(await(await fetch(s.csrfToken(),{credentials:"include"})).json()).token||((t=document.querySelector('meta[name="csrf-token"]'))==null?void 0:t.content),r=localStorage.getItem("token");let i,n;const c={noSi:this.form.noSi,date:this.form.date,warehouseId:this.form.warehouseId,status:this.form.status};if(this.isEditMode){if(!this.form.id)throw new Error("ID Stock In tidak ditemukan untuk update.");n=`${s.stockIn()}/${this.form.id}`,i=await fetch(n,{method:"PUT",body:JSON.stringify(c),headers:{Authorization:`Bearer ${r}`,"Content-Type":"application/json"},credentials:"include"})}else c.status="draft",n=s.stockIn(),i=await fetch(n,{method:"POST",body:JSON.stringify(c),headers:{Authorization:`Bearer ${r}`,"Content-Type":"application/json"},credentials:"include"});if(!i.ok)throw await i.json().catch(()=>({message:`Gagal ${this.isEditMode?"memperbarui":"membuat"} stock in`}));return await i.json()}catch(s){throw s}finally{this.loading=!1}},async fetchStockIns(){try{this.loading=!0;const{$api:t}=l(),s=`${t.stockIn()}`,o=localStorage.getItem("token"),a=await fetch(s,{headers:{Accept:"application/json",Authorization:`Bearer ${o}`},credentials:"include"});if(!a.ok){const r=await a.text();throw new Error(`Failed to fetch Stock In details! status: ${a.status}. Response: ${r}`)}const e=await a.json();this.stockIns=e,console.log("Pinia store stockIn state after refresh load:",this.stockIns)}catch(t){console.error("Error fetching stock in details:",t),this.error=t}finally{this.loading=!1}},async deleteStockIn(t){this.loading=!0,this.error=null;try{const{$api:s}=l(),o=localStorage.getItem("token"),a=await fetch(s.csrfToken(),{credentials:"include"});if(!a.ok)throw new Error("Gagal mengambil token CSRF");const r=(await a.json()).token,i=`${s.stockIn()}/${t}`,n=await fetch(i,{method:"DELETE",headers:{Authorization:`Bearer ${o}`,"Content-Type":"application/json"},credentials:"include"});if(!n.ok){const c=await n.json().catch(()=>({message:"Gagal menghapus stock in"}));throw new Error(c.message)}return!0}catch(s){throw console.error("Terjadi kesalahan saat menghapus stock in:",s),s}finally{this.loading=!1}},async postStockIn(t){try{const{$api:s}=l(),o=localStorage.getItem("token"),a=await fetch(s.csrfToken(),{credentials:"include"});if(!a.ok)throw new Error("Gagal mengambil token CSRF");const r=(await a.json()).token,i=`${s.postStockIn(t)}`,n=await fetch(i,{method:"POST",headers:{Authorization:`Bearer ${o}`,"Content-Type":"application/json"},credentials:"include"});if(!n.ok){const c=await n.json().catch(()=>({message:"Gagal memposting stock in"}));throw new Error(c.message)}return!0}catch(s){throw console.error("Error posting stock in:",s),this.error=s,s}finally{this.loading=!1}},async fetchStats(){const t={total:void 0,draft:void 0,posted:void 0};try{const{$api:s}=l(),o=localStorage.getItem("token"),a=await fetch(s.countStockIn(),{headers:{Authorization:`Bearer ${o}`,"Content-Type":"application/json"}});if(a.ok){const e=await a.json();e&&typeof e=="object"&&e!==null?this.stats={total:e.total,draft:e.draft,posted:e.posted}:(this.stats=t,console.warn("Data statistik dari API tidak dalam format objek yang diharapkan atau null:",e))}else this.stats=t,console.error("Gagal mengambil data statistik, status respons:",a.status)}catch(s){console.error("Gagal mengambil data statistik (exception):",s),this.stats=t,this.error=s}},openModal(t=null){this.isEditMode=!!t,this.validationErrors=[],t?this.form={...JSON.parse(JSON.stringify(t)),date:t.date?new Date(t.date).toISOString().slice(0,10):"",warehouseId:t.warehouse?t.warehouse.id:null}:this.form={noSi:"",date:"",warehouseId:null,status:""},this.showModal=!0},closeModal(){this.showModal=!1,this.isEditMode=!1,this.form={},this.validationErrors=[]},setPagination(t){this.params.first=t.first,this.params.rows=t.rows,this.fetchStockInsPaginated()},setSort(t){this.params.sortField=t.sortField,this.params.sortOrder=t.sortOrder,this.fetchStockInsPaginated()},setSearch(t){this.params.search=t,this.params.first=0,this.fetchStockInsPaginated()},handleRowsChange(){this.params.first=0,this.fetchStockInsPaginated()},async fetchStockInById(t){this.loading=!0,this.error=null;try{const{$api:s}=l(),o=localStorage.getItem("token"),a=await fetch(`${s.getStockInDetails(t)}`,{headers:{Authorization:`Bearer ${o}`,"Content-Type":"application/json",Accept:"application/json"}});if(!a.ok){const r=await a.json().catch(()=>({message:"Gagal memuat data stock in"}));throw new Error(r.message)}const e=await a.json();this.selectedStockIn=e}catch(s){throw this.error=s,s}finally{this.loading=!1}},resetStockIn(){this.selectedStockIn=null,this.error=null}}});export{p as u};
