import{e as c,f as i}from"./Bkm6qw8b.js";const h=c("stocks",{state:()=>({stocks:[],stockOuts:[],stockInDetails:[],stockOutDetails:[],stockTransfers:[],totalRecords:0,stats:{total:void 0,perWarehouse:[]},loading:!1,error:null,params:{first:0,rows:10,sortField:null,sortOrder:null,draw:1,search:""},form:{},isEditMode:!1,showModal:!1,validationErrors:[]}),actions:{async validateStockBatch(t){const{$api:s}=i(),e=localStorage.getItem("token");try{const a=await fetch(`${s.validateStockBatch()}`,{method:"POST",headers:{Authorization:`Bearer ${e}`,"Content-Type":"application/json",Accept:"application/json"},body:JSON.stringify({items:t})});if(!a.ok){const r=await a.json().catch(()=>({message:"Gagal memvalidasi stok dengan status: "+a.status}));throw new Error(r.message||"Gagal memvalidasi stok")}return(await a.json()).data||[]}catch(a){throw console.error("Error in validateStockBatch:",a),a}},async fetchStocksPaginated(t={}){this.loading=!0;try{const{$api:s}=i(),e=localStorage.getItem("token"),a=new URLSearchParams({page:(this.params.first/this.params.rows+1).toString(),rows:this.params.rows.toString(),sortField:this.params.sortField||"",sortOrder:this.params.sortOrder?this.params.sortOrder.toString():"",draw:(this.params.draw||1).toString(),search:this.params.search||""});t.productId&&a.append("productId",t.productId.toString()),t.warehouseId&&a.append("warehouseId",t.warehouseId.toString());const o=await fetch(`${s.stock()}?${a.toString()}`,{headers:{Authorization:`Bearer ${e}`,"Content-Type":"application/json",Accept:"application/json"}});if(!o.ok){const n=await o.json().catch(()=>({message:"Gagal memuat data stock dengan status: "+o.status}));throw new Error(n.message||"Gagal memuat data stock")}const r=await o.json();return this.stocks=r.data||[],this.totalRecords=parseInt(r.meta.total)||0,r}catch(s){throw this.stocks=[],this.totalRecords=0,s}finally{this.loading=!1}},async fetchStocks(){try{this.loading=!0;const{$api:t}=i(),s=`${t.stock()}`,e=localStorage.getItem("token"),a=await fetch(s,{headers:{Accept:"application/json",Authorization:`Bearer ${e}`},credentials:"include"});if(!a.ok){const r=await a.text();throw new Error(`Failed to fetch Stock details! status: ${a.status}. Response: ${r}`)}const o=await a.json();this.stocks=o,console.log("Pinia store stocks state after refresh load:",this.stocks)}catch(t){console.error("Error fetching stock details:",t),this.error=t}finally{this.loading=!1}},async deleteStock(t){this.loading=!0,this.error=null;try{const{$api:s}=i(),e=localStorage.getItem("token"),a=`${s.stock()}/${t}`,o=await fetch(a,{method:"DELETE",headers:{Authorization:`Bearer ${e}`,"Content-Type":"application/json"},credentials:"include"});if(!o.ok){const r=await o.json().catch(()=>({message:"Gagal menghapus stock"}));throw new Error(r.message)}return!0}catch(s){throw console.error("Terjadi kesalahan saat menghapus stock:",s),s}finally{this.loading=!1}},async fetchStats(){const t={total:void 0,perWarehouse:[]};try{const{$api:s}=i(),e=localStorage.getItem("token"),a=await fetch(s.getTotalStock(),{headers:{Authorization:`Bearer ${e}`,"Content-Type":"application/json"}});if(a.ok){const o=await a.json();o&&typeof o=="object"&&o!==null?this.stats={total:o.total,perWarehouse:o.perWarehouse}:(this.stats=t,console.warn("Data statistik dari API tidak dalam format objek yang diharapkan atau null:",o))}else this.stats=t,console.error("Gagal mengambil data statistik, status respons:",a.status)}catch(s){console.error("Gagal mengambil data statistik (exception):",s),this.stats=t,this.error=s}},setPagination(t){this.params.first=t.first,this.params.rows=t.rows,this.fetchStocksPaginated()},setSort(t){this.params.sortField=t.sortField,this.params.sortOrder=t.sortOrder,this.fetchStocksPaginated()},setSearch(t){this.params.search=t,this.params.first=0,this.fetchStocksPaginated()},handleRowsChange(){this.params.first=0,this.fetchStocksPaginated()}}});export{h as u};
