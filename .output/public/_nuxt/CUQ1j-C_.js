import{e as m,f as c}from"./Bkm6qw8b.js";import{S as f}from"./9Qm2jZ7z.js";const w=m("stockTransfer",{state:()=>({stockTransfers:[],selectedStockTransfer:null,totalRecords:0,stats:{total:void 0,draft:void 0,approved:void 0,rejected:void 0},loading:!1,error:null,productsInWarehouse:[],params:{first:0,rows:10,sortField:null,sortOrder:null,draw:1,search:""},form:{perusahaanId:null,cabangId:null,noTransfer:"",date:"",fromWarehouseId:null,toWarehouseId:null,status:"",stockTransferItems:[]},isEditMode:!1,showModal:!1,validationErrors:[]}),actions:{async fetchStockTransfersPaginated(){this.loading=!0;try{const{$api:t}=c(),s=localStorage.getItem("token"),e=new URLSearchParams({page:(this.params.first/this.params.rows+1).toString(),rows:this.params.rows.toString(),sortField:this.params.sortField||"",sortOrder:this.params.sortOrder?this.params.sortOrder.toString():"",draw:(this.params.draw||1).toString(),search:this.params.search||""}),r=await fetch(`${t.stockTransfer()}?${e.toString()}`,{headers:{Authorization:`Bearer ${s}`,"Content-Type":"application/json",Accept:"application/json"}});if(!r.ok){const o=await r.json().catch(()=>({message:"Gagal memuat data stock transfer dengan status: "+r.status}));throw new Error(o.message||"Gagal memuat data stock transfer")}const a=await r.json();return this.stockTransfers=a.data||[],this.totalRecords=parseInt(a.meta.total)||0,a}catch(t){throw this.stockTransfers=[],this.totalRecords=0,t}finally{this.loading=!1}},async saveStockTransfer(){var t,s;this.loading=!0;try{const{$api:e}=c(),o=(await(await fetch(e.csrfToken(),{credentials:"include"})).json()).token||((t=document.querySelector('meta[name="csrf-token"]'))==null?void 0:t.content),l=localStorage.getItem("token");let n,d;const h={perusahaanId:this.form.perusahaanId,cabangId:this.form.cabangId,date:this.form.date,fromWarehouseId:this.form.fromWarehouseId,toWarehouseId:this.form.toWarehouseId,description:this.form.description,stockTransferDetails:((s=this.form.stockTransferItems)==null?void 0:s.map(i=>{var p,u;return{productId:(u=(p=i.stock)==null?void 0:p.product)==null?void 0:u.id,quantity:Number(i.quantity)||0,description:i.description||""}}).filter(i=>i.productId))||[]};if(this.isEditMode){if(!this.form.id)throw new Error("ID Stock Transfer tidak ditemukan untuk update.");d=`${e.stockTransfer()}/${this.form.id}`,n=await fetch(d,{method:"PUT",body:JSON.stringify(h),headers:{Authorization:`Bearer ${l}`,"Content-Type":"application/json"},credentials:"include"})}else h.status="draft",d=e.stockTransfer(),n=await fetch(d,{method:"POST",body:JSON.stringify(h),headers:{Authorization:`Bearer ${l}`,"Content-Type":"application/json"},credentials:"include"});if(!n.ok){const i=await n.json().catch(()=>({message:`Gagal ${this.isEditMode?"memperbarui":"membuat"} stock transfer`}));throw n.status===422?this.validationErrors=i.errors:i.message&&(this.validationErrors=[{message:i.message}]),new Error(i.message||"Terjadi kesalahan")}return await n.json()}catch(e){throw e}finally{this.loading=!1}},async fetchStockTransfers(){try{this.loading=!0;const{$api:t}=c(),s=`${t.stockTransfer()}`,e=localStorage.getItem("token"),r=await fetch(s,{headers:{Accept:"application/json",Authorization:`Bearer ${e}`},credentials:"include"});if(!r.ok){const o=await r.text();throw new Error(`Failed to fetch Stock Transfer details! status: ${r.status}. Response: ${o}`)}const a=await r.json();this.stockTransfers=a,console.log("Pinia store stockTransfer state after refresh load:",this.stockTransfers)}catch(t){console.error("Error fetching stock in details:",t),this.error=t}finally{this.loading=!1}},async deleteStockTransfer(t){this.loading=!0,this.error=null;try{const{$api:s}=c(),e=localStorage.getItem("token"),r=await fetch(s.csrfToken(),{credentials:"include"});if(!r.ok)throw new Error("Gagal mengambil token CSRF");const o=(await r.json()).token,l=`${s.stockTransfer()}/${t}`,n=await fetch(l,{method:"DELETE",headers:{Authorization:`Bearer ${e}`,"Content-Type":"application/json"},credentials:"include"});if(!n.ok){const d=await n.json().catch(()=>({message:"Gagal menghapus stock transfer"}));throw new Error(d.message)}return!0}catch(s){throw console.error("Terjadi kesalahan saat menghapus stock transfer:",s),s}finally{this.loading=!1}},async approveStockTransfer(t){this.loading=!0,this.error=null;const{$api:s}=c();try{const e=localStorage.getItem("token"),r=await fetch(s.csrfToken(),{credentials:"include"});if(!r.ok)throw new Error("Gagal mendapatkan CSRF token.");const o=(await r.json()).token,l=await fetch(s.approveStockTransfer(t),{method:"PATCH",headers:{Authorization:`Bearer ${e}`,"Content-Type":"application/json",Accept:"application/json","X-CSRF-TOKEN":o},credentials:"include"});if(!l.ok){const n=await l.json().catch(()=>({message:"Gagal mengapprove stock transfer"}));throw new Error(n.message||"Gagal mengapprove stock transfer")}return await this.fetchStockTransfers(),await f.fire("Berhasil!","Stock Transfer berhasil diapprove.","success"),!0}catch(e){return console.error("Error approving stock transfer:",e),await f.fire("Error",e.message||"Gagal mengapprove stock transfer.","error"),!1}finally{this.loading=!1}},async fetchStats(){const t={total:void 0,draft:void 0,approved:void 0,rejected:void 0};try{const{$api:s}=c(),e=localStorage.getItem("token"),r=await fetch(s.countStockTransfer(),{headers:{Authorization:`Bearer ${e}`,"Content-Type":"application/json"}});if(r.ok){const a=await r.json();a&&typeof a=="object"&&a!==null?this.stats={total:a.total,draft:a.draft,approved:a.approved,rejected:a.rejected}:(this.stats=t,console.warn("Data statistik dari API tidak dalam format objek yang diharapkan atau null:",a))}else this.stats=t,console.error("Gagal mengambil data statistik, status respons:",r.status)}catch(s){console.error("Gagal mengambil data statistik (exception):",s),this.stats=t,this.error=s}},async openModal(t=null){if(this.isEditMode=!!t,this.validationErrors=[],t&&t.id){await this.fetchStockTransferById(t.id);const s=this.selectedStockTransfer;if(!s){console.error("Gagal memuat detail stock transfer."),this.closeModal();return}s.fromWarehouseId&&await this.fetchProductsByWarehouse(s.fromWarehouseId);const e=(s.stockTransferDetails||[]).map(r=>({stock:this.productsInWarehouse.find(o=>o.product.id===r.productId),productId:r.productId,quantity:r.quantity,description:r.description}));this.form={...JSON.parse(JSON.stringify(s)),date:s.date?new Date(s.date).toISOString().slice(0,10):"",stockTransferItems:e},this.form.stockTransferItems.length===0&&this.addItem()}else this.form={noTransfer:"",date:"",fromWarehouseId:null,toWarehouseId:null,status:"",stockTransferItems:[]},this.addItem();this.showModal=!0},closeModal(){this.showModal=!1,this.isEditMode=!1,this.form={},this.validationErrors=[],this.productsInWarehouse=[]},setPagination(t){this.params.first=t.first,this.params.rows=t.rows,this.fetchStockTransfersPaginated()},setSort(t){this.params.sortField=t.sortField,this.params.sortOrder=t.sortOrder,this.fetchStockTransfersPaginated()},setSearch(t){this.params.search=t,this.params.first=0,this.fetchStockTransfersPaginated()},handleRowsChange(){this.params.first=0,this.fetchStockTransfersPaginated()},async fetchStockTransferById(t){this.loading=!0,this.error=null;try{const{$api:s}=c(),e=localStorage.getItem("token"),r=await fetch(`${s.getStockTransferDetails(t)}`,{headers:{Authorization:`Bearer ${e}`,"Content-Type":"application/json",Accept:"application/json"}});if(!r.ok){const o=await r.json().catch(()=>({message:"Gagal memuat data stock transfer"}));throw new Error(o.message)}const a=await r.json();this.selectedStockTransfer=a}catch(s){throw this.error=s,s}finally{this.loading=!1}},resetStockTransfer(){this.selectedStockTransfer=null,this.error=null},addItem(){this.form.stockTransferItems||(this.form.stockTransferItems=[]),this.form.stockTransferItems.push({stock:null,productId:null,quantity:0})},removeItem(t){this.form.stockTransferItems&&this.form.stockTransferItems.splice(t,1)},async fetchProductsByWarehouse(t){if(!t){this.productsInWarehouse=[];return}this.loading=!0;try{const{$api:s}=c(),e=localStorage.getItem("token"),r=await fetch(`${s.stock()}?warehouseId=${t}&all=true`,{headers:{Authorization:`Bearer ${e}`,Accept:"application/json"}});if(!r.ok)throw new Error("Gagal memuat data produk dari gudang.");const a=await r.json();this.productsInWarehouse=a.data}catch(s){this.productsInWarehouse=[],console.error(s),f.fire("Error","Gagal memuat daftar produk.","error")}finally{this.loading=!1}}}});export{w as u};
